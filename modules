

--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---
... #TEST# ..
const collections = await mongoose.connection.db.collections();
  for (let collection of collections) {
    await collection.deleteMany({});
  }

## implicitly set ENV variable before ALL tests
process.env.JWT_KEY = 'asdfasdf';

## set FALSE when expect sending cookies only with HTTP for TESTS
cookieSession({ signed: false, secure:rocess.env.NODE_ENV !== 'test'})

## Cookies does not including automatically with SuperTest



--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---


npm i express-validator
https://express-validator.github.io/docs/

const { body, validationResult } = require('express-validator');

app.post(
  '/user',
  // username must be an email
  body('username').isEmail(),
  // password must be at least 5 chars long
  body('password').isLength({ min: 5 }),
  (req, res) => {
    // Finds the validation errors in this request and wraps them in an object with handy functions
    const errors = validationResult(req);
    if (!errors.isEmpty()) {
      return res.status(400).json({ errors: errors.array() });
    }

    User.create({
      username: req.body.username,
      password: req.body.password,
    }).then(user => res.json(user));
  },
);
